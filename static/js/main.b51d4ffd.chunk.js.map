{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","Fragment","className","style","color","mode","id","backgroundColor","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","_useState","useState","_useState2","Object","slicedToArray","path","setPath","concat","react_router_dom","onClick","to","title","aria-label","aria-current","width","onChange","change","value","htmlFor","toggleMode","aria-checked","role","onSubmit","event","preventDefault","placeholder","query","document","getElementById","item","includes","index","indexOf","focus","setSelectionRange","length","TextForm","text","setText","_useState3","_useState4","word","setWord","_useState5","_useState6","characters","setCharacters","_useState7","_useState8","sentences","setSentences","heading","onInput","words","target","newSent","split","filter","elm","newarr","trim","rows","upperCase","toUpperCase","showAlert","lowerText","toLowerCase","navigator","clipboard","writeText","newText","join","defaultProps","Alert","height","xmlns","display","viewBox","d","alert","xlinkHref","message","App","setAlert","setTimeout","setColor","setMode","options","selectedIndex","body","components_Alert","react_router","exact","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b51d4ffd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n            <h1 style={{color: props.mode === 'dark' ? 'white' : 'black'}} className='text-center'>About Us</h1>\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button style={{backgroundColor: props.mode === 'dark' ? '#282848' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"accordion-item\" style={{backgroundColor: props.mode === 'dark' ? '#282848' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button style={{backgroundColor: props.mode === 'dark' ? '#282848' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"accordion-item\" style={{backgroundColor: props.mode === 'dark' ? '#282848' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button style={{backgroundColor: props.mode === 'dark' ? '#282848' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\r\n    const [path, setPath] = useState('Home');\r\n\r\n    const search = () => {\r\n        let query = document.getElementById('search');\r\n        let item = document.getElementById('exampleFormControlTextarea1');\r\n        if (item.value.includes(query.value)) {\r\n            var index = item.value.indexOf(query.value);\r\n            item.focus();\r\n            item.setSelectionRange(index, index + query.value.length);\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const submitForm = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link onClick={() => {setPath('Home')}} className=\"navbar-brand Home\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link onClick={() => {setPath('Home')}} className={`nav-link ${path === 'Home' ? 'active' : ''}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link onClick={() => {setPath('About')}} className=\"nav-link About\" to=\"/About\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"form-floating me-3\" style={{width: '182px'}}>\r\n                        <select onChange={props.change} className=\"form-select\" id=\"floatingSelect\" aria-label=\"Floating label select example\">\r\n                            <option value=\"1\">Blue</option>\r\n                            <option value=\"2\">Red</option>\r\n                            <option value=\"3\">Green</option>\r\n                            <option value=\"4\">Orange</option>\r\n                        </select>\r\n                        <label htmlFor=\"form-select\">Choose a color mode.</label>\r\n                    </div>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input onClick={props.toggleMode} className=\"form-check-input\" aria-checked='false' type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label me-3\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'light' ? 'dark' : 'light'} Mode</label>\r\n                    </div>\r\n                    <form className=\"d-flex\" role=\"search\" onSubmit={submitForm}>\r\n                        <input id=\"search\" className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button onClick={search} className=\"btn bg-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here'\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props){\r\n    const handleUpClick = () => {\r\n        let upperCase = text.toUpperCase();\r\n        setText(upperCase);\r\n        if(text.length>0){\r\n            props.showAlert('Converted to Uppercase', 'success')\r\n        }\r\n        else{\r\n            props.showAlert('No Text input', 'warning')\r\n        }\r\n    }\r\n\r\n    const handleLCLick = () => {\r\n        let lowerText = text.toLowerCase();\r\n        setText(lowerText);\r\n        if(text.length>0){\r\n            props.showAlert('Converted to Lowercase', 'success')\r\n        }\r\n        else{\r\n            props.showAlert('No Text input', 'warning')\r\n        }\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(text);\r\n        if (text.length > 0){\r\n            props.showAlert('Text Copied to Clipboard', 'success')\r\n        }\r\n        else {\r\n            props.showAlert('No Text input', 'warning')\r\n        }\r\n    }\r\n\r\n    const removeExtraSpaces = () => {\r\n        let newText = text.split(/\\s{2,}/);\r\n        setText(newText.join(\" \"));\r\n        if (text.length > 0){ \r\n            props.showAlert('Extra Spaces have been removed', 'success')\r\n        }\r\n        else{\r\n            props.showAlert('No Text input', 'warning')\r\n        }\r\n    }\r\n\r\n    const countCharacters = (event) => {\r\n        let words = event.target.value;   \r\n        let sent = words.split(/[.]/);\r\n        let newSent = sent.filter((elm) => {\r\n                return elm !== \"\";\r\n            });\r\n        setSentences(newSent.length);\r\n        setCharacters(words.length);\r\n        words = words.trim();\r\n        let arr = (words.split(/\\s+/));\r\n        let newarr = arr.filter(function(elm){\r\n                return elm !== \"\";\r\n            }); \r\n        setWord(newarr.length);\r\n    }\r\n\r\n    const clearText = () => {\r\n        setText(\"\");\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [word, setWord] = useState(0);\r\n    const [characters, setCharacters] = useState(0);\r\n    const [sentences, setSentences] = useState(0);\r\n\r\n    return(\r\n    <>\r\n    <div style={{color: props.mode === \"light\" ? \"black\" : \"white\"}} className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n            <div className='mb-3'>\r\n            <textarea style={{backgroundColor: props.mode === \"light\" ? \"white\" : \"#13466e\" , color: props.mode === \"light\" ? \"black\" : \"white\"}} onInput={countCharacters} className=\"form-control\" onChange={handleOnChange} \r\n            id=\"exampleFormControlTextarea1\" value={text} rows=\"8\">\r\n            </textarea>\r\n            </div>\r\n        <button onClick={handleUpClick} style={{color: 'white', backgroundColor: props.color}} className='btn'>Convert to Uppercase</button>\r\n        <button onClick={handleLCLick} style={{color: 'white', backgroundColor: props.color}} className='btn my-2 ms-3'>Convert to Lowercase</button> \r\n        <button onClick={copyText} style={{color: 'white', backgroundColor: props.color}} className='btn my-2 ms-3'>Copy Text</button>\r\n        <button onClick={removeExtraSpaces} style={{color: 'white', backgroundColor: props.color}} className='btn my-2 ms-3'>Remove Extra Spaces</button>\r\n        <button onClick={clearText} style={{color: 'white', backgroundColor: props.color}} className='btn my-2 ms-3'>Clear Text</button>\r\n    </div>\r\n\r\n    <div style={{color: props.mode === \"light\" ? \"black\" : \"white\"}} className=\"container my-3\">\r\n        <h2>Your Text Summary:</h2>\r\n        <p>You entered {word} words and {characters} characters and {sentences} sentences</p>\r\n        <p>Time taken to read {word * 0.008} minutes</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length <=0 ? \"Enter text in textbox to preview here.\" : text }</p>\r\n    </div>\r\n    </>\r\n    );\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <>\r\n            <div style={{ height: '50px' }}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ display: 'none' }}>\r\n                    <symbol id=\"check-circle-fill\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n                    </symbol>\r\n                    <symbol id=\"info-fill\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\" />\r\n                    </symbol>\r\n                    <symbol id=\"exclamation-triangle-fill\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n                    </symbol>\r\n                </svg>\r\n                {props.alert && <div className={`alert alert-${props.alert.type} d-flex align-items-center`} role=\"alert\">\r\n                    <svg style={{ width: '20px', height: '20px' }} className=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Success:\"><use xlinkHref={`${props.alert.type === \"warning\" ? \"#exclamation-triangle-fill\" : \"#check-circle-fill\"}`} /></svg>\r\n                    <div>\r\n                        {props.alert.message}\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Alert","import './App.css';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react'\r\nimport Alert from './components/Alert';\r\n// import ReactDOM from \"react-dom/client\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      message: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 1500)\r\n  }\r\n\r\n  const [color, setColor] = useState('blue');\r\n\r\n  const change = (event) => {\r\n    setColor(event.target.options[event.target.selectedIndex].text)\r\n  }\r\n\r\n  const [mode, setMode] = useState('light')\r\n  const toggleMode = () => {\r\n    if (mode === 'light') {\r\n      // let option = document.getElementById(\"floatingSelect\");\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#282848';\r\n      showAlert('Dark Mode has been activated', 'success');\r\n    }\r\n    else if (mode === 'dark') {\r\n      setMode('light')\r\n      document.body.style.backgroundColor = 'white'\r\n      showAlert('Light Mode has been activated', 'success');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Navbar change={change} title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n      <Alert alert={alert} />\r\n      <div className='container my-3'>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<TextForm color={color} showAlert={showAlert} heading=\"Enter your text here: \" mode={mode} />}>\r\n        </Route>\r\n        <Route exact path=\"/About\" element={<About mode={mode}/>}>\r\n        </Route>\r\n      </Routes>\r\n      </div>\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}